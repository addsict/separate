#!/usr/bin/env bash

separate()
{
    local orig_win_name=$(tmux display-message -p '#W') win_name=tmp-$(date +%s)
    tmux rename-window $win_name

    local base_pane_idx=$(tmux display-message -p '#P')
    local next_pane_idx=$base_pane_idx

    if [ $vertical_switch == 1 ] ; then
        local topt=-h
    else
        local topt=-v
    fi

    for cmd in "$@"
    do
        if [ $next_pane_idx -ne $base_pane_idx ]; then
            local size=$((100 / ($# + 1 - (next_pane_idx - base_pane_idx))))
            tmux split-window $topt -t $win_name.$base_pane_idx -p $size
        fi
        tmux send-keys -t $win_name.$next_pane_idx "$cmd" C-m

        next_pane_idx=$((next_pane_idx + 1))
    done

    tmux rename-window "$orig_win_name"
}

_help()
{
    cat <<EOF
Usage:
    $(basename "$0") [options] [FILE]

Options:
    -h       show this help message
    -v       separate vertically
EOF
}

# pipe to cat to avoid linux epoll bug
# cf. http://sourceforge.net/p/tmux/mailman/message/27713196/
if { tmux -V 2>&1 | cat >/dev/null ; } && [ ${PIPESTATUS[0]} -ne 0 ]
then
    echo 'tmux not installed' >&2
    exit 0
elif { tmux info 2>&1 | cat >/dev/null ; } && [ ${PIPESTATUS[0]} -ne 0 ]
then
    echo 'start a tmux session' >&2
    exit 0
fi

vertical_switch=0
while getopts 'hv' opt
do
    case $opt in
    h)  _help
        exit 0
        ;;
    v)  vertical_switch=1
        ;;
    ?)  _help
        exit 0
        ;;
    esac
done
shift $(($OPTIND - 1))

# FILE not specified and stdin is a terminal
if { [ -z "$1" ] && [ -t 0 ] ; }
then
    _help
    exit 0
fi

IFS=$'\n'
if [ "$1" ] ; then
    cmds=($(cat "$1"))
else
    cmds=($(cat))
fi

separate "${cmds[@]}"
